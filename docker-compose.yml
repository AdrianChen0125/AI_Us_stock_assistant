  version: '3.8'

  services:
    postgres:
      image: postgres:15
      env_file:
        - .env
      ports:
        - "5432:5432"
      volumes:
        - postgres_data:/var/lib/postgresql/data


    airflow-webserver:
      build: ./airflow
      container_name: airflow-webserver
      depends_on:
        - postgres
      environment:
        - AIRFLOW__CORE__EXECUTOR=LocalExecutor
        - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
        - AIRFLOW__WEBSERVER__WEB_SERVER_PORT=8080
        - AIRFLOW__CORE__FERNET_KEY=pAq1xg4zRQmS6jQy5_dhMcgJzG89EXs3rRR8uYwPPAg=
      env_file:
        - .env
      ports:
        - "8080:8080"
      volumes:
        - ./airflow/dags:/opt/airflow/dags
        - ./airflow/logs:/opt/airflow/logs
        - ./airflow/plugins:/opt/airflow/plugins
        - ./dbt:/opt/airflow/dbt
        - ~/.dbt:/home/airflow/.dbt
      command: >
        bash -c "
          airflow db init &&
          airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com &&
          exec airflow webserver
        "

    airflow-scheduler:
      build: ./airflow
      container_name: airflow-scheduler
      depends_on:
        - airflow-webserver
        - postgres
      environment:
        - AIRFLOW__CORE__EXECUTOR=LocalExecutor
        - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
        - AIRFLOW__CORE__FERNET_KEY=pAq1xg4zRQmS6jQy5_dhMcgJzG89EXs3rRR8uYwPPAg=
      env_file:
        - .env
      volumes:
        - ./airflow/dags:/opt/airflow/dags
        - ./airflow/logs:/opt/airflow/logs
        - ./airflow/plugins:/opt/airflow/plugins
        - ./dbt:/opt/airflow/dbt
        - ~/.dbt:/home/airflow/.dbt

      command: >
        bash -c "
          exec airflow scheduler
        "

    fastapi:
      build: ./fastapi
      container_name: fastapi
      depends_on:
        - airflow-scheduler
      env_file:
        - .env
      ports:
        - "8000:8000"
      volumes:
        - ./fastapi:/app

    gradio:
      build: ./gradio
      container_name: gradio
      depends_on:
        - fastapi
      env_file:
        - .env
      ports:
        - "7860:7860"
      volumes:
        - ./gradio:/app

  volumes:
    postgres_data:


